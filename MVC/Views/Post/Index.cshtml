@model Cs.Unicam.TrashHunter.MVC.Models.ViewModels.PostViewModel
@using Cs.Unicam.TrashHunter.Services.DTOs
@{
    ViewData["Title"] = "Tutti i Post";
    UserDTO user = ViewBag.User;
}
<link rel="stylesheet" href="~/css/post.css" />

<div class="container">
    @{
        int i = 0;
    }
    <div class="row">
        @foreach (var post in Model.Post.Items)
        {
            <div class="col-md-6 col-lg-4 mt-4">
                <div class="card h-100">
                    <img class="card-img-top" alt="img" src="@(post.Attachments.FirstOrDefault()?.Base64Content ?? "img/logo.png")" />
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@post.Title</h5>
                        <p class="card-text">@post.Description</p>
                        <div class="mt-auto">
                            <p class="card-text">
                                <small class="text-muted">
                                    <i class="fas fa-calendar-alt"></i>
                                    @post.CreationDate.ToString("dd/MM/yyyy")
                                </small>
                            </p>
                            @if (post.CompletionDate.HasValue)
                            {
                                <p class="card-text">
                                    <small class="text-muted">
                                        <i class="fas fa-check-circle"></i>
                                        Completato il @post.CompletionDate.Value.ToString("dd/MM/yyyy")
                                    </small>
                                </p>
                            }
                            <p class="card-text">
                                <a asp-controller="@(UserController.GetControllerName<UserController>())"
                                   asp-action="@nameof(UserController.Index)"
                                   asp-route-userid="@post.User.Email"
                                   class="text-decoration-none">
                                    <small class="text-muted">
                                        <i class="fas fa-user"></i>
                                        @post.User.CompleteName
                                    </small>
                                </a>
                            </p>
                            <div class="d-flex justify-content-between">
                                @if (User.IsInRole(Role.Checker))
                                {
                                    <a asp-action="@nameof(PostController.Evaluate)" asp-route-postid="@post.PostId"
                                       asp-route-approve="False" class="btn btn-danger">
                                        <i class="fas fa-times"></i> Rifiuta
                                    </a>
                                    <a asp-action="@nameof(PostController.Evaluate)" asp-route-postid="@post.PostId"
                                       asp-route-approve="True" class="btn btn-success">
                                        <i class="fas fa-check"></i> Approva
                                    </a>
                                }
                                else if (User.IsInRole(Role.User) && !post.CompletionDate.HasValue && post.IsApproved == true)
                                {
                                    <a asp-action="@nameof(PostController.Complete)" asp-route-postid="@post.PostId" class="btn btn-primary">
                                        <i class="fas fa-check-circle"></i> Completa
                                    </a>
                                } else if (User.IsInRole(Role.Admin))
                                {
                                    <p class="fw-bold">@post.State.GetStateString()</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

</div>
